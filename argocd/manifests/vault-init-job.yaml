apiVersion: batch/v1
kind: Job
metadata:
  name: vault-init
  namespace: vault
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    spec:
      serviceAccountName: vault-init-sa
      containers:
      - name: vault-init
        image: bitnami/kubectl:latest
        command:
        - /bin/sh
        - -c
        - |
          # Wait for Vault to be ready
          until vault status 2>/dev/null | grep -q "Version"; do
            echo "Waiting for Vault to be ready..."
            sleep 5
          done
          
          # Check if Vault is already initialized
          if vault status 2>/dev/null | grep -q "Initialized.*true"; then
            echo "Vault is already initialized"
            
            # Check if unseal keys secret exists
            if kubectl get secret vault-unseal-keys 2>/dev/null; then
              echo "Unseal keys secret already exists"
              exit 0
            else
              echo "Vault is initialized but no unseal keys secret found"
              echo "Cannot re-initialize Vault when it's already initialized."
              echo "Please manually unseal Vault and create the vault-unseal-keys secret."
              echo "You can run: kubectl exec vault-0 -n vault -- vault operator unseal <UNSEAL_KEY>"
              echo "Then create the secret with: kubectl create secret generic vault-unseal-keys -n vault --from-literal=unseal-keys=<UNSEAL_KEY>"
              exit 1
            fi
          else
            echo "Initializing Vault..."
            vault operator init -key-shares=1 -key-threshold=1 -format=json > /tmp/init.json
            
            # Extract unseal key using jq
            UNSEAL_KEY=$(cat /tmp/init.json | jq -r '.unseal_keys_b64[0]')
            
            # Create unseal keys secret for auto-unsealing
            kubectl create secret generic vault-unseal-keys \
              --from-literal=unseal-keys="$UNSEAL_KEY" \
              --dry-run=client -o yaml | kubectl apply -f -
            
            echo "Vault initialized and unseal keys secret created"
            echo "Vault will auto-unseal on restart"
          fi
        env:
        - name: VAULT_ADDR
          value: "http://vault.vault.svc.cluster.local:8200"
        - name: VAULT_SKIP_VERIFY
          value: "true"
      restartPolicy: OnFailure
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-init-sa
  namespace: vault
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vault-init-role
  namespace: vault
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "get", "update"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vault-init-rolebinding
  namespace: vault
subjects:
- kind: ServiceAccount
  name: vault-init-sa
  namespace: vault
roleRef:
  kind: Role
  name: vault-init-role
  apiGroup: rbac.authorization.k8s.io
