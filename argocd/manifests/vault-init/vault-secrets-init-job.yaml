apiVersion: batch/v1
kind: Job
metadata:
  name: vault-secrets-init
  namespace: vault
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    spec:
      serviceAccountName: vault-secrets-init-sa
      containers:
      - name: vault-secrets-init
        image: hashicorp/vault:1.15.0
        command:
        - /bin/sh
        - -c
        - |
          # Wait for Vault to be ready and unsealed
          until vault status | grep -q "Sealed.*false"; do
            echo "Waiting for Vault to be unsealed..."
            sleep 5
          done
          
          # Get root token from secret
          ROOT_TOKEN=$(kubectl get secret vault-init-secret -o jsonpath='{.data.root-token}' | base64 -d)
          export VAULT_TOKEN="$ROOT_TOKEN"
          
          # Create placeholder secrets (these will be replaced with actual values)
          echo "Creating placeholder secrets..."
          vault kv put secret/grafana-cloud \
            access-policy-token="placeholder"
          
          vault kv put secret/slack \
            api-url="placeholder"
          
          echo "Vault secrets initialization complete"
        env:
        - name: VAULT_ADDR
          value: "http://vault.vault.svc.cluster.local:8200"
        - name: VAULT_SKIP_VERIFY
          value: "true"
      restartPolicy: OnFailure
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault-secrets-init-sa
  namespace: vault
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: vault-secrets-init-role
  namespace: vault
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: vault-secrets-init-rolebinding
  namespace: vault
subjects:
- kind: ServiceAccount
  name: vault-secrets-init-sa
  namespace: vault
roleRef:
  kind: Role
  name: vault-secrets-init-role
  apiGroup: rbac.authorization.k8s.io
