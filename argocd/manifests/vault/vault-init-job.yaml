apiVersion: batch/v1
kind: Job
metadata:
  name: vault-init
  namespace: vault
spec:
  template:
    spec:
      serviceAccountName: vault
      containers:
      - name: vault-init
        image: hashicorp/vault:1.9.0
        command:
        - /bin/sh
        - -c
        - |
          # Wait for Vault to be ready
          echo "Waiting for Vault to be ready..."
          until vault status; do
            sleep 5
          done
          
          # Check if Vault is already initialized
          if vault status | grep -q "Initialized.*true"; then
            echo "Vault is already initialized"
            exit 0
          fi
          
          # Initialize Vault with auto-unseal
          echo "Initializing Vault with auto-unseal..."
          vault operator init \
            -recovery-shares=5 \
            -recovery-threshold=3 \
            -format=json > /tmp/init.json
          
          # Extract root token
          ROOT_TOKEN=$(cat /tmp/init.json | jq -r '.root_token')
          
          # Create transit key
          echo "Creating transit key..."
          vault secrets enable transit
          vault write -f transit/keys/autounseal
          
          # Create autounseal policy
          echo "Creating autounseal policy..."
          vault policy write autounseal -<<EOF
          path "transit/encrypt/autounseal" {
            capabilities = ["update"]
          }
          path "transit/decrypt/autounseal" {
            capabilities = ["update"]
          }
          EOF
          
          # Create token for auto-unseal
          echo "Creating auto-unseal token..."
          AUTOUNSEAL_TOKEN=$(vault token create -orphan -policy="autounseal" -period=24h -format=json | jq -r '.auth.client_token')
          
          # Store the auto-unseal token in a secret
          kubectl create secret generic vault-autounseal-token \
            --from-literal=token="$AUTOUNSEAL_TOKEN" \
            --dry-run=client -o yaml | kubectl apply -f -
          
          echo "Vault initialization complete!"
          echo "Root token: $ROOT_TOKEN"
          echo "Auto-unseal token stored in secret: vault-autounseal-token"
          
          # Store root token securely (for manual operations)
          kubectl create secret generic vault-root-token \
            --from-literal=token="$ROOT_TOKEN" \
            --dry-run=client -o yaml | kubectl apply -f -
          
        env:
        - name: VAULT_ADDR
          value: "http://127.0.0.1:8200"
        - name: VAULT_SKIP_VERIFY
          value: "true"
        - name: VAULT_TOKEN
          value: "root"  # Will be set after initialization
      restartPolicy: OnFailure
