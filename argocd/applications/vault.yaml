apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vault
  namespace: argocd
  labels:
    app.kubernetes.io/name: vault
spec:
  project: default
  source:
    repoURL: https://helm.releases.hashicorp.com
    chart: vault
    targetRevision: "0.27.0"
    helm:
      values: |
        server:
          enabled: true
          
          # Environment variables
          extraEnvironmentVars:
            VAULT_SKIP_VERIFY: "true"
          
          # Service account
          serviceAccount:
            create: true
            name: vault
          
          # Init container to auto-unseal
          extraInitContainers:
            - name: vault-unsealer
              image: hashicorp/vault:1.15.2
              command:
              - /bin/sh
              - -c
              - |
                # Wait for Vault to be ready
                until vault status 2>/dev/null; do
                  echo "Waiting for Vault..."
                  sleep 5
                done
                
                # Check if already unsealed
                if vault status | grep "Sealed.*false"; then
                  echo "Vault already unsealed"
                  exit 0
                fi
                
                # Unseal with key from secret
                if [ -f /vault/unseal/unseal_key ]; then
                  echo "Unsealing Vault..."
                  vault operator unseal "$(cat /vault/unseal/unseal_key)"
                  echo "Vault unsealed successfully"
                else
                  echo "No unseal key found - Vault needs to be initialized first"
                fi
              env:
              - name: VAULT_ADDR
                value: "http://127.0.0.1:8200"
              volumeMounts:
              - name: vault-unseal-key
                mountPath: /vault/unseal
                readOnly: true
          
          # Mount the unseal key secret
          extraVolumes:
            - name: vault-unseal-key
              secret:
                secretName: vault-unseal-keys
                optional: true
          
          # Enable built-in Kubernetes auth configuration
          authDelegator:
            enabled: true
          
          # UI configuration
          ui:
            enabled: true
          
          # Ingress configuration
          ingress:
            enabled: true
            ingressClassName: traefik
            annotations:
              traefik.ingress.kubernetes.io/router.entrypoints: web
            hosts:
              - host: vault.local
          
          # Vault configuration
          standalone:
            config: |
              ui = true
              
              listener "tcp" {
                tls_disable = 1
                address = "[::]:8200"
                cluster_address = "[::]:8201"
              }
              
              storage "file" {
                path = "/vault/data"
              }
          

        
        # Disable injector since we're using External Secrets
        injector:
          enabled: false
  destination:
    namespace: vault
    server: https://kubernetes.default.svc
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
