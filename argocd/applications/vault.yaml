apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: vault
  namespace: argocd
  labels:
    app.kubernetes.io/name: vault
spec:
  project: default
  source:
    repoURL: https://helm.releases.hashicorp.com
    chart: vault
    targetRevision: "0.27.0"
    helm:
      values: |
        server:
          enabled: true
          
          # Auto-unseal configuration using Kubernetes secret
          extraEnvironmentVars:
            VAULT_SKIP_VERIFY: "true"
          

          
          # Storage configuration
          storage:
            file:
              path: /vault/data
          
          # Service account with Vault role annotation
          serviceAccount:
            create: true
            name: vault
            annotations:
              vault.hashicorp.com/role: "vault"
          
          # Enable built-in Kubernetes auth configuration
          authDelegator:
            enabled: true
          
          # Configure readiness probe to be more lenient during initialization
          readinessProbe:
            enabled: true
            failureThreshold: 30
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          
          # Auto-unseal and enable KV secrets engine
          postStart:
            - /bin/sh
            - -c
            - |
              # Wait for Vault to be ready
              until vault status; do
                echo "Waiting for Vault to be ready..."
                sleep 5
              done
              
              # Check if Vault is already unsealed
              if vault status | grep -q "Sealed.*false"; then
                echo "Vault is already unsealed"
              else
                echo "Waiting for vault-init-secret to be available..."
                # Wait for the secret to be created by vault-init job
                until kubectl get secret vault-init-secret -o jsonpath='{.data.unseal-key}' 2>/dev/null; do
                  echo "Waiting for vault-init-secret..."
                  sleep 10
                done
                
                echo "Auto-unsealing Vault..."
                # Get unseal key from secret
                UNSEAL_KEY=$(kubectl get secret vault-init-secret -o jsonpath='{.data.unseal-key}' | base64 -d)
                vault operator unseal "$UNSEAL_KEY"
              fi
              
              # Enable KV secrets engine
              vault secrets enable -path=secret kv-v2 || true
          
          # UI configuration
          ui:
            enabled: true
          
          # Ingress configuration
          ingress:
            enabled: true
            ingressClassName: traefik
            annotations:
              traefik.ingress.kubernetes.io/router.entrypoints: web
            hosts:
              - host: vault.local
        
        # Disable injector since we're using External Secrets
        injector:
          enabled: false
  destination:
    namespace: vault
    server: https://kubernetes.default.svc
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
